<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
<<<<<<< HEAD
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
=======
>>>>>>> 73523b83483399491d72dfd4f0fe86239f544e1a
</root>